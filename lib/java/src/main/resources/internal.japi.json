[
    {
        "///": " Ping the server. ",
        "fn.ping_": {},
        "->": {
            "Ok": {}
        },
        "_errors": "^error\\._Validated$"
    },

    {
        "///": " Get the uAPI `schema` of this server. ",
        "fn.api_": {},
        "->": {
            "Ok": {
                "api": ["array", ["object", ["any"]]]
            }
        },
        "_errors": "^error\\._Validated$"
    },

    {
        "///": " A placeholder function when the requested function is unknown. ",
        "fn._unknown": {},
        "->": {
            "Ok": {}
        },
        "_errors": "^error\\._Validated$"
    },

    {
        "///": " A type. ",
        "union.Type_": {
            "Null": {},
            "Boolean": {},
            "Integer": {},
            "Number": {},
            "String": {},
            "Array": {},
            "Object": {},
            "Any": {},
            "Unknown": {}
        }
    },

    {
        "///": " A reason for the validation failure in the body. ",
        "union._BodyValidationFailureReason": {
            "TypeUnexpected": {
                "expected": ["union.Type_"],
                "actual": ["union.Type_"]
            },
            "NullDisallowed": {},
            "ObjectKeyDisallowed": {},
            "RequiredObjectKeyMissing": {},
            "NumberOutOfRange": {},
            "ObjectSizeUnexpected": {},
            "ObjectKeyDisallowed": {},
            "ExtensionValidationFailed": {
                "reason": ["string"],
                "data!": ["object", ["any"]]
            },
            "ObjectKeyRegexMatchCountUnexpected": {
                "regex": ["string"],
                "expected": ["integer"],
                "actual": ["integer"]
            },
            "RequiredObjectKeyMissing": {},
            "FunctionUnknown": {}
        }
    },

    {
        "///": " A reason for the validation failure in the header. ",
        "union._HeaderValidationFailureReason": {
            "TypeUnexpected": {
                "expected": ["union.Type_"],
                "actual": ["union.Type_"]
            },
            "TypeUnknown": {},
            "ObjectKeyDisallowed": {},
            "UnionCaseUnknown": {}
        }
    },

    {
        "///": " A parse failure. ",
        "union.ParseFailure_": {
            "IncompatibleBinaryEncoding": {},
            "BinaryDecodeFailure": {},
            "JsonInvalid": {},
            "ExpectedJsonArrayOfAnObjectAndAnObjectOfOneObject": {}
        }
    },

    {
        "///": " A validation failure located at a `path` explained by a `reason`. ",
        "struct._BodyValidationFailure": {
            "path": ["array", ["any?"]],
            "reason": ["union._BodyValidationFailureReason"]
        }
    },

    {
        "///": " A validation failure located at a `path` explained by a `reason`. ",
        "struct._HeaderValidationFailure": {
            "path": ["array", ["any?"]],
            "reason": ["union._HeaderValidationFailureReason"]
        }
    },

    {
        "///": [
            " All functions may return a validation error:                                                             ",
            " - `_ErrorInvalidRequestHeaders`: The Headers on the Request is invalid as outlined by a list of `cases`. ",
            " - `_ErrorInvalidRequestBody`: The Body on the Request is invalid as outlined by a list of `cases`.       ",
            " - `_ErrorInvalidResponseBody`: The Body that the Server attempted to put on the Response is invalid as   ",
            "     outlined by a list of `cases.                                                                        ",
            " - `_ErrorParseFailure`: The Request could not be parsed as a uAPI Message.                               "
        ],
        "errors.Validated_": {
            "->": {
                "ErrorUnknown_": {},
                "ErrorInvalidRequestHeaders_": {
                    "cases": ["array", ["struct._HeaderValidationFailure"]]
                },
                "ErrorInvalidRequestBody_": {
                    "cases": ["array", ["struct._BodyValidationFailure"]]
                },
                "ErrorInvalidResponseBody_": {
                    "cases": ["array", ["struct._BodyValidationFailure"]]
                },
                "ErrorParseFailure_": {
                    "reasons": ["array", ["union.ParseFailure_"]]
                }
            }
        }
    }
]
