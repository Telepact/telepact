{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "array",
  "items": {
    "oneOf": [
      {
        "type": "object",
        "additionalProperties": false,
        "minProperties": 1,
        "patternProperties": {
          "^info\\.[a-zA-Z_]\\w*": {
            "type": "object",
            "description": "Information about the API.",
            "additionalProperties": false
          }
        },
        "properties": {
          "///": {
            "anyOf": [
              { "type": "string" },
              { "type": "array", "items": { "type": "string" } }
            ]
          }
        }
      },
      {
        "type": "object",
        "additionalProperties": false,
        "minProperties": 1,
        "patternProperties": {
          "^struct\\.[a-zA-Z_]\\w*": {
            "type": "object",
            "description": "A struct with 0 or more fields.",
            "additionalProperties": false,
            "patternProperties": {
              "^[a-zA-Z_]\\w*!?$": {
                "$ref": "#/$defs/typeDeclaration"
              }
            }
          }
        },
        "properties": {
          "///": {
            "anyOf": [
              { "type": "string" },
              { "type": "array", "items": { "type": "string" } }
            ]
          }
        }
      },
      {
        "type": "object",
        "additionalProperties": false,
        "minProperties": 1,
        "patternProperties": {
          "enum\\.[a-zA-Z_]\\w*$": {
            "type": "object",
            "description": "An enum with 1 or more fields.",
            "additionalProperties": false,
            "minProperties": 1,
            "patternProperties": {
              "^[a-zA-Z_]\\w*?$": {
                "type": "object",
                "additionalProperties": false,
                "patternProperties": {
                  "^[a-zA-Z_]\\w*!?$": {
                    "$ref": "#/$defs/typeDeclaration"
                  }
                }
              }
            }
          }
        },
        "properties": {
          "///": {
            "anyOf": [
              { "type": "string" },
              { "type": "array", "items": { "type": "string" } }
            ]
          }
        }
      },
      {
        "type": "object",
        "additionalProperties": false,
        "minProperties": 2,
        "patternProperties": {
          "^fn\\.[a-zA-Z_]\\w*": {
            "description": "A function that accepts an argument argument and returns a result enum that is either an ok struct or an error enum.",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
              "^[a-zA-Z_]\\w*!?$": {
                "$ref": "#/$defs/typeDeclaration"
              }
            }
          }
        },
        "required": ["->"],
        "properties": {
          "->": {
            "type": "object",
            "required": ["ok"],
            "patternProperties": {
              "^[a-zA-Z_]\\w*?$": {
                "type": "object",
                "additionalProperties": false,
                "patternProperties": {
                  "^[a-zA-Z_]\\w*!?$": {
                    "$ref": "#/$defs/typeDeclaration"
                  }
                }
              }
            }
          },
          "///": {
            "anyOf": [
              { "type": "string" },
              { "type": "array", "items": { "type": "string" } }
            ]
          }
        }
      },
      {
        "type": "object",
        "additionalProperties": false,
        "minProperties": 1,
        "patternProperties": {
          "^trait\\.[a-zA-Z_]\\w*": {
            "type": "object",
            "additionalProperties": {
              "description": "A function that accepts an argument argument and returns a result enum that is either an ok struct or an error enum.",
              "type": "object",
              "additionalProperties": false,
              "patternProperties": {
                "^[a-zA-Z_]\\w*!?$": {
                  "$ref": "#/$defs/typeDeclaration"
                }
              }
            },
            "minProperties": 2,
            "required": ["->"],
            "properties": {
              "->": {
                "type": "object",
                "patternProperties": {
                  "^[a-zA-Z_]\\w*?$": {
                    "type": "object",
                    "additionalProperties": false,
                    "patternProperties": {
                      "^[a-zA-Z_]\\w*!?$": {
                        "$ref": "#/$defs/typeDeclaration"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "properties": {
          "///": {
            "anyOf": [
              { "type": "string" },
              { "type": "array", "items": { "type": "string" } }
            ]
          }
        }
      },
      {
        "type": "object",
        "additionalProperties": false,
        "minProperties": 1,
        "patternProperties": {
          "^ext\\.[a-zA-Z_]\\w*": {
            "type": "object",
            "description": "A type extension.",
            "additionalProperties": false
          }
        },
        "properties": {
          "///": {
            "anyOf": [
              { "type": "string" },
              { "type": "array", "items": { "type": "string" } }
            ]
          }
        }
      }
    ]
  },
  "$defs": {
    "typeDeclaration": {
      "type": "string",
      "pattern": "^((boolean|integer|number|string|any)|((enum|struct|fn|info|ext)\\.([a-zA-Z_]\\w*))|((array|object)<(((boolean|integer|number|string|any)|((enum|struct|fn|info|ext)\\.([a-zA-Z_]\\w*))|((array|object)<(((boolean|integer|number|string|any)|((enum|struct|fn|info|ext)\\.([a-zA-Z_]\\w*))|((array|object)<(((boolean|integer|number|string|any)|((enum|struct|fn|info|ext)\\.([a-zA-Z_]\\w*))|((array|object)<(((boolean|integer|number|string|any)|((enum|struct|fn|info|ext)\\.([a-zA-Z_]\\w*))|((array|object)<(((boolean|integer|number|string|any)|((enum|struct|fn|info|ext)\\.([a-zA-Z_]\\w*))|((array|object)<any>))(\\?)?)>))(\\?)?)>))(\\?)?)>))(\\?)?)>))(\\?)?)>))(\\?)?$",
      "description": "A field declaration.\nThe field name must be a legal JavaScript identifier, which can be appended by `!` to indicate optionality.\nThe value must be a jAPI type string that is (1) a standard type (e.g. boolean, string), (2) a custom type (e.g. struct.Example1, enum.Example2) defined within the scope of this jAPI description, or (3) a collection type of a recursive instance of another jAPI type string (e.g. array&lt;integer&gt;, object<array<struct.Example>>), which can be appended by `?` to indicate nullability.",
      "defaultSnippets": [
        {
          "label": "jAPI type declaration",
          "body": "${1|boolean,integer,number,string,any,array<any>,object<any>,struct.Example,enum.Example|}"
        }
      ]
    }
  }
}
