{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "array",
  "items": {
    "oneOf": [
      {
        "type": "object",
        "additionalProperties": false,
        "minProperties": 1,
        "patternProperties": {
          "^info\\.[a-zA-Z_]\\w*": {
            "type": "object",
            "description": "Information about the API.",
            "additionalProperties": false
          }
        },
        "properties": {
          "///": {
            "anyOf": [
              { "type": "string" },
              { "type": "array", "items": { "type": "string" } }
            ]
          }
        }
      },
      {
        "type": "object",
        "additionalProperties": false,
        "minProperties": 1,
        "patternProperties": {
          "^struct\\.[a-zA-Z_]\\w*?": {
            "type": "object",
            "description": "A struct with 0 or more fields.",
            "additionalProperties": false,
            "patternProperties": {
              "^[a-zA-Z_]\\w*!?$": {
                "$ref": "#/$defs/typeDeclaration"
              }
            }
          },
          "^struct<1>\\.[a-zA-Z_]\\w*?": {
            "type": "object",
            "description": "A struct with 0 or more fields.",
            "additionalProperties": false,
            "patternProperties": {
              "^[a-zA-Z_]\\w*!?$": {
                "$ref": "#/$defs/typeDeclarationParam1"
              }
            }
          },
          "^struct<2>\\.[a-zA-Z_]\\w*?": {
            "type": "object",
            "description": "A struct with 0 or more fields.",
            "additionalProperties": false,
            "patternProperties": {
              "^[a-zA-Z_]\\w*!?$": {
                "$ref": "#/$defs/typeDeclarationParam2"
              }
            }
          },
          "^struct<3>\\.[a-zA-Z_]\\w*?": {
            "type": "object",
            "description": "A struct with 0 or more fields.",
            "additionalProperties": false,
            "patternProperties": {
              "^[a-zA-Z_]\\w*!?$": {
                "$ref": "#/$defs/typeDeclarationParam3"
              }
            }
          }
        },
        "properties": {
          "///": {
            "anyOf": [
              { "type": "string" },
              { "type": "array", "items": { "type": "string" } }
            ]
          }
        }
      },
      {
        "type": "object",
        "additionalProperties": false,
        "minProperties": 1,
        "patternProperties": {
          "enum\\.[a-zA-Z_]\\w*$": {
            "type": "object",
            "description": "An enum with 1 or more fields.",
            "additionalProperties": false,
            "minProperties": 1,
            "patternProperties": {
              "^[a-zA-Z_]\\w*?$": {
                "type": "object",
                "additionalProperties": false,
                "patternProperties": {
                  "^[a-zA-Z_]\\w*!?$": {
                    "$ref": "#/$defs/typeDeclaration"
                  }
                }
              }
            }
          }
        },
        "properties": {
          "///": {
            "anyOf": [
              { "type": "string" },
              { "type": "array", "items": { "type": "string" } }
            ]
          }
        }
      },
      {
        "type": "object",
        "additionalProperties": false,
        "minProperties": 2,
        "patternProperties": {
          "^fn\\.[a-zA-Z_]\\w*": {
            "description": "A function that accepts an argument argument and returns a result enum that is either an ok struct or an error enum.",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
              "^[a-zA-Z_]\\w*!?$": {
                "$ref": "#/$defs/typeDeclaration"
              }
            }
          }
        },
        "required": ["->"],
        "properties": {
          "->": {
            "type": "object",
            "required": ["ok"],
            "patternProperties": {
              "^[a-zA-Z_]\\w*?$": {
                "type": "object",
                "additionalProperties": false,
                "patternProperties": {
                  "^[a-zA-Z_]\\w*!?$": {
                    "$ref": "#/$defs/typeDeclaration"
                  }
                }
              }
            }
          },
          "///": {
            "anyOf": [
              { "type": "string" },
              { "type": "array", "items": { "type": "string" } }
            ]
          }
        }
      },
      {
        "type": "object",
        "additionalProperties": false,
        "minProperties": 1,
        "patternProperties": {
          "^trait\\.[a-zA-Z_]\\w*": {
            "type": "object",
            "additionalProperties": {
              "description": "A function that accepts an argument argument and returns a result enum that is either an ok struct or an error enum.",
              "type": "object",
              "additionalProperties": false,
              "patternProperties": {
                "^[a-zA-Z_]\\w*!?$": {
                  "$ref": "#/$defs/typeDeclaration"
                }
              }
            },
            "minProperties": 2,
            "required": ["->"],
            "properties": {
              "->": {
                "type": "object",
                "patternProperties": {
                  "^[a-zA-Z_]\\w*?$": {
                    "type": "object",
                    "additionalProperties": false,
                    "patternProperties": {
                      "^[a-zA-Z_]\\w*!?$": {
                        "$ref": "#/$defs/typeDeclaration"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "properties": {
          "///": {
            "anyOf": [
              { "type": "string" },
              { "type": "array", "items": { "type": "string" } }
            ]
          }
        }
      },
      {
        "type": "object",
        "additionalProperties": false,
        "minProperties": 1,
        "patternProperties": {
          "^ext\\.[a-zA-Z_]\\w*": {
            "type": "object",
            "description": "A type extension.",
            "additionalProperties": false
          }
        },
        "properties": {
          "///": {
            "anyOf": [
              { "type": "string" },
              { "type": "array", "items": { "type": "string" } }
            ]
          }
        }
      }
    ]
  },
  "$defs": {
    "typeDeclaration": {
      "type": "array",
      "if": {
        "prefixItems": [
          {
            "type": "string",
            "pattern": "^((boolean|integer|number|string|any)|(enum|struct|fn|info|ext)\\.([a-zA-Z_]\\w*))(\\?)?$"
          }
        ]
      },
      "then": {
        "prefixItems": [
          {
            "type": "string",
            "pattern": "^((boolean|integer|number|string|any)|(enum|struct|fn|info|ext)\\.([a-zA-Z_]\\w*))(\\?)?$"
          }
        ],
        "items": false,
        "minItems": 1,
        "maxItems": 1
      },
      "else": {
        "if": {
          "prefixItems": [
            {
              "type": "string",
              "pattern": "^((array|object)|(enum|struct|fn|info|ext)<1>\\.([a-zA-Z_]\\w*))(\\?)?$"
            }
          ]
        },
        "then": {
          "prefixItems": [
            {
              "type": "string",
              "pattern": "^((array|object)|(enum|struct|fn|info|ext)<1>\\.([a-zA-Z_]\\w*))(\\?)?$"
            }
          ],
          "items": { "$ref": "#/$defs/typeDeclaration" },
          "minItems": 2,
          "maxItems": 2
        },
        "else": {
          "if": {
            "prefixItems": [
              {
                "type": "string",
                "pattern": "^(enum|struct|fn|info|ext)<2>\\.([a-zA-Z_]\\w*)(\\?)?$"
              }
            ]
          },
          "then": {
            "prefixItems": [
              {
                "type": "string",
                "pattern": "^(enum|struct|fn|info|ext)<2>\\.([a-zA-Z_]\\w*)(\\?)?$"
              }
            ],
            "items": { "$ref": "#/$defs/typeDeclaration" },
            "minItems": 3,
            "maxItems": 3
          },
          "else": {
            "if": {
              "prefixItems": [
                {
                  "type": "string",
                  "pattern": "^(enum|struct|fn|info|ext)<3>\\.([a-zA-Z_]\\w*)(\\?)?$"
                }
              ]
            },
            "then": {
              "prefixItems": [
                {
                  "type": "string",
                  "pattern": "^(enum|struct|fn|info|ext)<3>\\.([a-zA-Z_]\\w*)(\\?)?$"
                }
              ],
              "items": { "$ref": "#/$defs/typeDeclaration" },
              "minItems": 4,
              "maxItems": 4
            },
            "else": {
              "prefixItems": [
                {
                  "type": "string",
                  "pattern": "^((boolean|integer|number|string|any)|(array|object)|(enum|struct|fn|info|ext)(<[0-3]>)?\\.([a-zA-Z_]\\w*))(\\?)?$"
                }
              ]
            }
          }
        }
      }
    },
    "typeDeclarationParam1": {
      "type": "array",
      "if": {
        "prefixItems": [
          {
            "type": "string",
            "pattern": "^((boolean|integer|number|string|any|T\\.0)|(enum|struct|fn|info|ext)\\.([a-zA-Z_]\\w*))(\\?)?$"
          }
        ]
      },
      "then": {
        "prefixItems": [
          {
            "type": "string",
            "pattern": "^((boolean|integer|number|string|any|T\\.0)|(enum|struct|fn|info|ext)\\.([a-zA-Z_]\\w*))(\\?)?$"
          }
        ],
        "items": false,
        "minItems": 1,
        "maxItems": 1
      },
      "else": {
        "if": {
          "prefixItems": [
            {
              "type": "string",
              "pattern": "^((array|object)|(enum|struct|fn|info|ext)<1>\\.([a-zA-Z_]\\w*))(\\?)?$"
            }
          ]
        },
        "then": {
          "prefixItems": [
            {
              "type": "string",
              "pattern": "^((array|object)|(enum|struct|fn|info|ext)<1>\\.([a-zA-Z_]\\w*))(\\?)?$"
            }
          ],
          "items": { "$ref": "#/$defs/typeDeclarationParam1" },
          "minItems": 2,
          "maxItems": 2
        },
        "else": {
          "if": {
            "prefixItems": [
              {
                "type": "string",
                "pattern": "^(enum|struct|fn|info|ext)<2>\\.([a-zA-Z_]\\w*)(\\?)?$"
              }
            ]
          },
          "then": {
            "prefixItems": [
              {
                "type": "string",
                "pattern": "^(enum|struct|fn|info|ext)<2>\\.([a-zA-Z_]\\w*)(\\?)?$"
              }
            ],
            "items": { "$ref": "#/$defs/typeDeclarationParam1" },
            "minItems": 3,
            "maxItems": 3
          },
          "else": {
            "if": {
              "prefixItems": [
                {
                  "type": "string",
                  "pattern": "^(enum|struct|fn|info|ext)<3>\\.([a-zA-Z_]\\w*)(\\?)?$"
                }
              ]
            },
            "then": {
              "prefixItems": [
                {
                  "type": "string",
                  "pattern": "^(enum|struct|fn|info|ext)<3>\\.([a-zA-Z_]\\w*)(\\?)?$"
                }
              ],
              "items": { "$ref": "#/$defs/typeDeclarationParam1" },
              "minItems": 4,
              "maxItems": 4
            },
            "else": {
              "prefixItems": [
                {
                  "type": "string",
                  "pattern": "^((boolean|integer|number|string|any||T\\.0)|(array|object)|(enum|struct|fn|info|ext)(<[0-3]>)?\\.([a-zA-Z_]\\w*))(\\?)?$"
                }
              ]
            }
          }
        }
      }
    },
    "typeDeclarationParam2": {
      "type": "array",
      "if": {
        "prefixItems": [
          {
            "type": "string",
            "pattern": "^((boolean|integer|number|string|any|T\\.[0-1])|(enum|struct|fn|info|ext)\\.([a-zA-Z_]\\w*))(\\?)?$"
          }
        ]
      },
      "then": {
        "prefixItems": [
          {
            "type": "string",
            "pattern": "^((boolean|integer|number|string|any|T\\.[0-1])|(enum|struct|fn|info|ext)\\.([a-zA-Z_]\\w*))(\\?)?$"
          }
        ],
        "items": false,
        "minItems": 1,
        "maxItems": 1
      },
      "else": {
        "if": {
          "prefixItems": [
            {
              "type": "string",
              "pattern": "^((array|object)|(enum|struct|fn|info|ext)<1>\\.([a-zA-Z_]\\w*))(\\?)?$"
            }
          ]
        },
        "then": {
          "prefixItems": [
            {
              "type": "string",
              "pattern": "^((array|object)|(enum|struct|fn|info|ext)<1>\\.([a-zA-Z_]\\w*))(\\?)?$"
            }
          ],
          "items": { "$ref": "#/$defs/typeDeclarationParam2" },
          "minItems": 2,
          "maxItems": 2
        },
        "else": {
          "if": {
            "prefixItems": [
              {
                "type": "string",
                "pattern": "^(enum|struct|fn|info|ext)<2>\\.([a-zA-Z_]\\w*)(\\?)?$"
              }
            ]
          },
          "then": {
            "prefixItems": [
              {
                "type": "string",
                "pattern": "^(enum|struct|fn|info|ext)<2>\\.([a-zA-Z_]\\w*)(\\?)?$"
              }
            ],
            "items": { "$ref": "#/$defs/typeDeclarationParam2" },
            "minItems": 3,
            "maxItems": 3
          },
          "else": {
            "if": {
              "prefixItems": [
                {
                  "type": "string",
                  "pattern": "^(enum|struct|fn|info|ext)<3>\\.([a-zA-Z_]\\w*)(\\?)?$"
                }
              ]
            },
            "then": {
              "prefixItems": [
                {
                  "type": "string",
                  "pattern": "^(enum|struct|fn|info|ext)<3>\\.([a-zA-Z_]\\w*)(\\?)?$"
                }
              ],
              "items": { "$ref": "#/$defs/typeDeclarationParam2" },
              "minItems": 4,
              "maxItems": 4
            },
            "else": {
              "prefixItems": [
                {
                  "type": "string",
                  "pattern": "^((boolean|integer|number|string|any||T\\.[0-1])|(array|object)|(enum|struct|fn|info|ext)(<[0-3]>)?\\.([a-zA-Z_]\\w*))(\\?)?$"
                }
              ]
            }
          }
        }
      }
    },
    "typeDeclarationParam3": {
      "type": "array",
      "if": {
        "prefixItems": [
          {
            "type": "string",
            "pattern": "^((boolean|integer|number|string|any|T\\.[0-2])|(enum|struct|fn|info|ext)\\.([a-zA-Z_]\\w*))(\\?)?$"
          }
        ]
      },
      "then": {
        "prefixItems": [
          {
            "type": "string",
            "pattern": "^((boolean|integer|number|string|any|T\\.[0-2])|(enum|struct|fn|info|ext)\\.([a-zA-Z_]\\w*))(\\?)?$"
          }
        ],
        "items": false,
        "minItems": 1,
        "maxItems": 1
      },
      "else": {
        "if": {
          "prefixItems": [
            {
              "type": "string",
              "pattern": "^((array|object)|(enum|struct|fn|info|ext)<1>\\.([a-zA-Z_]\\w*))(\\?)?$"
            }
          ]
        },
        "then": {
          "prefixItems": [
            {
              "type": "string",
              "pattern": "^((array|object)|(enum|struct|fn|info|ext)<1>\\.([a-zA-Z_]\\w*))(\\?)?$"
            }
          ],
          "items": { "$ref": "#/$defs/typeDeclarationParam3" },
          "minItems": 2,
          "maxItems": 2
        },
        "else": {
          "if": {
            "prefixItems": [
              {
                "type": "string",
                "pattern": "^(enum|struct|fn|info|ext)<2>\\.([a-zA-Z_]\\w*)(\\?)?$"
              }
            ]
          },
          "then": {
            "prefixItems": [
              {
                "type": "string",
                "pattern": "^(enum|struct|fn|info|ext)<2>\\.([a-zA-Z_]\\w*)(\\?)?$"
              }
            ],
            "items": { "$ref": "#/$defs/typeDeclarationParam3" },
            "minItems": 3,
            "maxItems": 3
          },
          "else": {
            "if": {
              "prefixItems": [
                {
                  "type": "string",
                  "pattern": "^(enum|struct|fn|info|ext)<3>\\.([a-zA-Z_]\\w*)(\\?)?$"
                }
              ]
            },
            "then": {
              "prefixItems": [
                {
                  "type": "string",
                  "pattern": "^(enum|struct|fn|info|ext)<3>\\.([a-zA-Z_]\\w*)(\\?)?$"
                }
              ],
              "items": { "$ref": "#/$defs/typeDeclarationParam3" },
              "minItems": 4,
              "maxItems": 4
            },
            "else": {
              "prefixItems": [
                {
                  "type": "string",
                  "pattern": "^((boolean|integer|number|string|any||T\\.[0-2])|(array|object)|(enum|struct|fn|info|ext)(<[0-3]>)?\\.([a-zA-Z_]\\w*))(\\?)?$"
                }
              ]
            }
          }
        }
      }
    }
  }
}
