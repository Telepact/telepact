import org.uapi.Message;
import java.util.Map;

public abstract class ServerHandler_ {

    {%- for fn in functions %}
    {%- set function_name = fn | replace('fn.', '') %}
    public abstract {{ function_name }}.Output {{ function_name }}(Map<String, Object> headers, {{ function_name }}.Input input);
    {%- endfor %}

    public Message handler(Message message) {
        var functionName = message.body.keySet().stream().findAny().get();
        switch (functionName) {
            {%- for fn in functions %}
            {%- set function_name = fn | replace('fn.', '') %}
            case "{{ fn }}" -> {
                var output = this.{{ function_name }}(message.header, new {{ function_name }}.Input(message.body.values().findAny().get()));
                return new Message(Map.of(), output.toPseudoJson());
            }
            {%- endfor %}
            default -> throw new IllegalArgumentException("Unknown function: " + functionName);
        }
    }

}