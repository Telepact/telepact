#|
#|  Copyright The Telepact Authors
#|
#|  Licensed under the Apache License, Version 2.0 (the "License");
#|  you may not use this file except in compliance with the License.
#|  You may obtain a copy of the License at
#|
#|  https://www.apache.org/licenses/LICENSE-2.0
#|
#|  Unless required by applicable law or agreed to in writing, software
#|  distributed under the License is distributed on an "AS IS" BASIS,
#|  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#|  See the License for the specific language governing permissions and
#|  limitations under the License.
#|

cases = {
    'schema': [
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'struct.Example': {}}, {'struct.Example': {}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 27}, 'path': [1, 'struct.Example'], 'reason': {'PathCollision': {'document': 'auto_', 'location': {'row': 1, 'col': 3}, 'location': {'row': 1, 'col': 3}, 'path': [0, 'struct.Example']}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'struct.Example': {}}], 'extend!': [{'struct.Example': {}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'extend', 'location': {'row': 1, 'col': 3}, 'path': [0, 'struct.Example'], 'reason': {'PathCollision': {'document': 'default', 'location': {'row': 1, 'col': 3}, 'path': [0, 'struct.Example']}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'struct.Example': {'field': ['boolean'], 'field!': ['integer']}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 44}, 'path': [0, 'struct.Example', 'field!'], 'reason': {'PathCollision': {'document': 'auto_', 'location': {'row': 1, 'col': 22}, 'path': [0, 'struct.Example', 'field']}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'struct.Example': {'field!': ['boolean'], 'field': ['integer']}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 45}, 'path': [0, 'struct.Example', 'field'], 'reason': {'PathCollision': {'document': 'auto_', 'location': {'row': 1, 'col': 22}, 'path': [0, 'struct.Example', 'field!']}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'invalid.Example': {}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 2}, 'path': [0], 'reason': {'ObjectKeyRegexMatchCountUnexpected': {'regex': '^(((fn|errors|headers|info)|((struct|union|_ext)(<[0-2]>)?))\\..*)', 'actual': 0, 'expected': 1, 'keys': ['invalid.Example']}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': None}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 1}, 'path': [], 'reason': {'TypeUnexpected': {'actual': {'Null': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': False}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 1}, 'path': [], 'reason': {'TypeUnexpected': {'actual': {'Boolean': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': 0}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 1}, 'path': [], 'reason': {'TypeUnexpected': {'actual': {'Number': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': ''}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 1}, 'path': [], 'reason': {'TypeUnexpected': {'actual': {'String': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': {}}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 1}, 'path': [], 'reason': {'TypeUnexpected': {'actual': {'Object': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.example': {},'->': [{'Ok_': {}},{"Err": {}}]},{'errors.Broken': [{'Err': {}}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 76}, 'path': [1, 'errors.Broken', 0, 'Err'], 'reason': {'PathCollision': {'document': 'auto_', 'location': {'row': 1, 'col': 42}, 'path': [0, '->', 1, 'Err']}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.example': {},'->': [{'Ok_': {}},{"Err": {}}]}],'extend!':[{'errors.Broken': [{'Err': {}}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'extend', 'location': {'row': 1, 'col': 22}, 'path': [0, 'errors.Broken', 0, 'Err'], 'reason': {'PathCollision': {'document': 'default', 'location': {'row': 1, 'col': 42}, 'path': [0, '->', 1, 'Err']}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'errors.Broken': []}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 3}, 'path': [0, 'errors.Broken'], 'reason': {'EmptyArrayDisallowed': {}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'errors.Broken': [{"Err": {}}]}, {'errors.Other': [{'Err': {}}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 55}, 'path': [1, 'errors.Other', 0, 'Err'], 'reason': {'PathCollision': {'document': 'auto_', 'location': {'row': 1, 'col': 22}, 'path': [0, 'errors.Broken', 0, 'Err']}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'errors.Broken': [{"Err": {}}]}], 'extend!': [{'errors.Other': [{'Err': {}}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'extend', 'location': {'row': 1, 'col': 21}, 'path': [0, 'errors.Other', 0, 'Err'], 'reason': {'PathCollision': {'document': 'default', 'location': {'row': 1, 'col': 22}, 'path': [0, 'errors.Broken', 0, 'Err']}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'errors.Broken': [{'Err': {}}], 'unknown': False}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 35}, 'path': [0, 'unknown'], 'reason': {'ObjectKeyDisallowed': {}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'errors.Broken': [{'Err': {}, 'Unknown': {}}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 21}, 'path': [0, 'errors.Broken', 0], 'reason': {'ObjectKeyRegexMatchCountUnexpected': {'actual': 2, 'expected': 1, 'regex': '^([A-Z][a-zA-Z0-9_]*)$', 'keys': ['Err', 'Unknown']}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'errors.Broken': [{'wrong': {}}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 21}, 'path': [0, 'errors.Broken', 0], 'reason': {'ObjectKeyRegexMatchCountUnexpected': {'actual': 0, 'expected': 1, 'regex': '^([A-Z][a-zA-Z0-9_]*)$', 'keys': ['wrong']}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'errors.Broken': [{}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 21}, 'path': [0, 'errors.Broken', 0], 'reason': {'ObjectKeyRegexMatchCountUnexpected': {'actual': 0, 'expected': 1, 'regex': '^([A-Z][a-zA-Z0-9_]*)$', 'keys': []}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'errors.Broken': [None]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 21}, 'path': [0, 'errors.Broken', 0], 'reason': {'TypeUnexpected': {'actual': {'Null': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'errors.Broken': [False]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 21}, 'path': [0, 'errors.Broken', 0], 'reason': {'TypeUnexpected': {'actual': {'Boolean': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'errors.Broken': [0]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 21}, 'path': [0, 'errors.Broken', 0], 'reason': {'TypeUnexpected': {'actual': {'Number': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'errors.Broken': ['']}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 21}, 'path': [0, 'errors.Broken', 0], 'reason': {'TypeUnexpected': {'actual': {'String': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'errors.Broken': [[]]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 21}, 'path': [0, 'errors.Broken', 0], 'reason': {'TypeUnexpected': {'actual': {'Array': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'struct.Broken': None}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 3}, 'path': [0, 'struct.Broken'], 'reason': {'TypeUnexpected': {'actual': {'Null': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'struct.Broken': False}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 3}, 'path': [0, 'struct.Broken'], 'reason': {'TypeUnexpected': {'actual': {'Boolean': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'struct.Broken': 0}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 3}, 'path': [0, 'struct.Broken'], 'reason': {'TypeUnexpected': {'actual': {'Number': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'struct.Broken': ''}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 3}, 'path': [0, 'struct.Broken'], 'reason': {'TypeUnexpected': {'actual': {'String': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'struct.Broken': []}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 3}, 'path': [0, 'struct.Broken'], 'reason': {'TypeUnexpected': {'actual': {'Array': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'struct.Broken': []}], 'extend!': [{'struct.Broken2': ''}]}}}}], [{'@assert_': {'setCompare': True}}, {'ErrorValidationFailure': {'cases': [{'document': 'default', 'location': {'row': 1, 'col': 3}, 'path': [0, 'struct.Broken'], 'reason': {'TypeUnexpected': {'actual': {'Array': {}}, 'expected': {'Object': {}}}}},{'document': 'extend', 'location': {'row': 1, 'col': 3}, 'path': [0, 'struct.Broken2'], 'reason': {'TypeUnexpected': {'actual': {'String': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'struct.Example': {'@invalid': []}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 22}, 'path': [0, 'struct.Example', '@invalid'], 'reason': {'KeyRegexMatchFailed': {'regex': '^([a-z][a-zA-Z0-9_]*)(!)?$'}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'struct.Example': {'field': []}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 22}, 'path': [0, 'struct.Example', 'field'], 'reason': {'EmptyArrayDisallowed': {}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'struct.Example': {'field': [None]}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 32}, 'path': [0, 'struct.Example', 'field', 0], 'reason': {'TypeUnexpected': {'actual': {'Null': {}}, 'expected': {'String': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'struct.Example': {'field': [False]}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 32}, 'path': [0, 'struct.Example', 'field', 0], 'reason': {'TypeUnexpected': {'actual': {'Boolean': {}}, 'expected': {'String': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'struct.Example': {'field': [0]}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 32}, 'path': [0, 'struct.Example', 'field', 0], 'reason': {'TypeUnexpected': {'actual': {'Number': {}}, 'expected': {'String': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'struct.Example': {'field': [[]]}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 32}, 'path': [0, 'struct.Example', 'field', 0], 'reason': {'TypeUnexpected': {'actual': {'Array': {}}, 'expected': {'String': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'struct.Example': {'field': [{}]}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 32}, 'path': [0, 'struct.Example', 'field', 0], 'reason': {'TypeUnexpected': {'actual': {'Object': {}}, 'expected': {'String': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'struct.Example': {'field': ['']}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 32}, 'path': [0, 'struct.Example', 'field', 0], 'reason': {'StringRegexMatchFailed': {'regex': '^(.+?)(\\?)?$'}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'struct.Example': {'field': ['struct.Broken']},},{'struct.Example2': {'field': ['struct.Broken']},},{'struct.Broken': {'field': [None]}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 132}, 'path': [2, 'struct.Broken', 'field', 0], 'reason': {'TypeUnexpected': {'actual': {'Null': {}}, 'expected': {'String': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'struct.Example': {'field': ['struct.Broken']},},{'struct.Example2': {'field': ['struct.Broken']},},{'struct.Broken': {'field': [False]}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 132}, 'path': [2, 'struct.Broken', 'field', 0], 'reason': {'TypeUnexpected': {'actual': {'Boolean': {}}, 'expected': {'String': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'struct.Example': {'field': ['struct.Broken']},},{'struct.Example2': {'field': ['struct.Broken']},},{'struct.Broken': {'field': [0]}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 132}, 'path': [2, 'struct.Broken', 'field', 0], 'reason': {'TypeUnexpected': {'actual': {'Number': {}}, 'expected': {'String': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'struct.Example': {'field': ['struct.Broken']},},{'struct.Example2': {'field': ['struct.Broken']},},{'struct.Broken': {'field': [[]]}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 132}, 'path': [2, 'struct.Broken', 'field', 0], 'reason': {'TypeUnexpected': {'actual': {'Array': {}}, 'expected': {'String': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'struct.Example': {'field': ['struct.Broken']},},{'struct.Example2': {'field': ['struct.Broken']},},{'struct.Broken': {'field': [{}]}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 132}, 'path': [2, 'struct.Broken', 'field', 0], 'reason': {'TypeUnexpected': {'actual': {'Object': {}}, 'expected': {'String': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'struct.Broken': {'field': ['wrong']},},]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 31}, 'path': [0, 'struct.Broken', 'field', 0], 'reason': {'StringRegexMatchFailed': {'regex': '^(boolean|integer|number|string|any|array|object)|((fn|(union|struct|_ext))\\.([a-zA-Z_]\\w*))$'}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'struct.Fine': {'field': ['number']},},]}}}}],[{}, {'Ok_': {}}]],
        [[{}, {'fn.validateSchema': {'input': {'Json': {'schema': 'wrong'}}}}],[{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 1}, 'path': [], 'reason': {'JsonInvalid': {}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'Json': {'schema': 'true'}}}}],[{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 1}, 'path': [], 'reason': {'TypeUnexpected': {'actual': {'Boolean': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'struct.Broken': {}, 'unknown': False},]}}}}],[{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 24}, 'path': [0, 'unknown'], 'reason': {'ObjectKeyDisallowed': {}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'struct.Broken': {'field': ['struct.Unknown']},}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 31}, 'path': [0, 'struct.Broken', 'field', 0], 'reason': {'TypeUnknown': {'name': 'struct.Unknown'}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'_ext.Broken': {}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 2}, 'path': [0], 'reason': {'TypeExtensionImplementationMissing': {'name': '_ext.Broken'}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken': None,'->': [{'Ok_': {}}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 3}, 'path': [0, 'fn.broken'], 'reason': {'TypeUnexpected': {'actual': {'Null': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken': False,'->': [{'Ok_': {}}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 3}, 'path': [0, 'fn.broken'], 'reason': {'TypeUnexpected': {'actual': {'Boolean': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken': 0,'->': [{'Ok_': {}}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 3}, 'path': [0, 'fn.broken'], 'reason': {'TypeUnexpected': {'actual': {'Number': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken': '','->': [{'Ok_': {}}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 3}, 'path': [0, 'fn.broken'], 'reason': {'TypeUnexpected': {'actual': {'String': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken': [],'->': [{'Ok_': {}}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 3}, 'path': [0, 'fn.broken'], 'reason': {'TypeUnexpected': {'actual': {'Array': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken': {'field': None},'->': [{'Ok_': {}}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 17}, 'path': [0, 'fn.broken', 'field'], 'reason': {'TypeUnexpected': {'actual': {'Null': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken': {'field': False},'->': [{'Ok_': {}}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 17}, 'path': [0, 'fn.broken', 'field'], 'reason': {'TypeUnexpected': {'actual': {'Boolean': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken': {'field': 0},'->': [{'Ok_': {}}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 17}, 'path': [0, 'fn.broken', 'field'], 'reason': {'TypeUnexpected': {'actual': {'Number': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken': {'field': ''},'->': [{'Ok_': {}}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 17}, 'path': [0, 'fn.broken', 'field'], 'reason': {'TypeUnexpected': {'actual': {'String': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken': {'field': {}},'->': [{'Ok_': {}}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 17}, 'path': [0, 'fn.broken', 'field'], 'reason': {'TypeUnexpected': {'actual': {'Object': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken': {}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 2}, 'path': [0], 'reason': {'RequiredObjectKeyMissing': {'key': '->'}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken': {},'->': None}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 20}, 'path': [0, '->'], 'reason': {'TypeUnexpected': {'actual': {'Null': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken': {},'->': False}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 20}, 'path': [0, '->'], 'reason': {'TypeUnexpected': {'actual': {'Boolean': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken': {},'->': 0}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 20}, 'path': [0, '->'], 'reason': {'TypeUnexpected': {'actual': {'Number': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken': {},'->': ''}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 20}, 'path': [0, '->'], 'reason': {'TypeUnexpected': {'actual': {'String': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken': {},'->': {}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 20}, 'path': [0, '->'], 'reason': {'TypeUnexpected': {'actual': {'Object': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken': {},'->': []}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 20}, 'path': [0, '->'], 'reason': {'EmptyArrayDisallowed': {}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken': {},'->': [{'Ok_': {}},{'Wrong': None}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 41}, 'path': [0, '->', 1, 'Wrong'], 'reason': {'TypeUnexpected': {'actual': {'Null': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken': {},'->': [{'Ok_': {}},{'Wrong': False}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 41}, 'path': [0, '->', 1, 'Wrong'], 'reason': {'TypeUnexpected': {'actual': {'Boolean': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken': {},'->': [{'Ok_': {}},{'Wrong': 0}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 41}, 'path': [0, '->', 1, 'Wrong'], 'reason': {'TypeUnexpected': {'actual': {'Number': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken': {},'->': [{'Ok_': {}},{'Wrong': ''}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 41}, 'path': [0, '->', 1, 'Wrong'], 'reason': {'TypeUnexpected': {'actual': {'String': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken': {},'->': [{'Ok_': {}},{'Wrong': []}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 41}, 'path': [0, '->', 1, 'Wrong'], 'reason': {'TypeUnexpected': {'actual': {'Array': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken': {},'->': [{'Ok_': {'field': None}}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 36}, 'path': [0, '->', 0, 'Ok_', 'field'], 'reason': {'TypeUnexpected': {'actual': {'Null': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken': {},'->': [{'Ok_': {'field': False}}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 36}, 'path': [0, '->', 0, 'Ok_', 'field'], 'reason': {'TypeUnexpected': {'actual': {'Boolean': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken': {},'->': [{'Ok_': {'field': 0}}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 36}, 'path': [0, '->', 0, 'Ok_', 'field'], 'reason': {'TypeUnexpected': {'actual': {'Number': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken': {},'->': [{'Ok_': {'field': ''}}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 36}, 'path': [0, '->', 0, 'Ok_', 'field'], 'reason': {'TypeUnexpected': {'actual': {'String': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken': {},'->': [{'Ok_': {'field': {}}}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 36}, 'path': [0, '->', 0, 'Ok_', 'field'], 'reason': {'TypeUnexpected': {'actual': {'Object': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.fine': {},'->': [{'Ok_': {}}]}]}}}}], [{}, {'Ok_': {}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken_': {},'->': [{'Ok_': {}}], 'unknown': False}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 42}, 'path': [0, 'unknown'], 'reason': {'ObjectKeyDisallowed': {}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken': {},'->': [{'Ok_': {}}], '_errors': '^.*$'}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 41}, 'path': [0, '_errors'], 'reason': {'ObjectKeyDisallowed': {}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken_': {},'->': [{'Ok_': {}}], "_errors": None}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 42}, 'path': [0, '_errors'], 'reason': {'TypeUnexpected': {'actual': {'Null': {}}, 'expected': {'String': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken_': {},'->': [{'Ok_': {}}], "_errors": False}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 42}, 'path': [0, '_errors'], 'reason': {'TypeUnexpected': {'actual': {'Boolean': {}}, 'expected': {'String': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken_': {},'->': [{'Ok_': {}}], "_errors": 0}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 42}, 'path': [0, '_errors'], 'reason': {'TypeUnexpected': {'actual': {'Number': {}}, 'expected': {'String': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken_': {},'->': [{'Ok_': {}}], "_errors": []}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 42}, 'path': [0, '_errors'], 'reason': {'TypeUnexpected': {'actual': {'Array': {}}, 'expected': {'String': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'fn.broken_': {},'->': [{'Ok_': {}}], "_errors": {}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 42}, 'path': [0, '_errors'], 'reason': {'TypeUnexpected': {'actual': {'Object': {}}, 'expected': {'String': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'union.Broken': None}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 3}, 'path': [0, 'union.Broken'], 'reason': {'TypeUnexpected': {'actual': {'Null': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'union.Broken': False}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 3}, 'path': [0, 'union.Broken'], 'reason': {'TypeUnexpected': {'actual': {'Boolean': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'union.Broken': 0}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 3}, 'path': [0, 'union.Broken'], 'reason': {'TypeUnexpected': {'actual': {'Number': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'union.Broken': ''}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 3}, 'path': [0, 'union.Broken'], 'reason': {'TypeUnexpected': {'actual': {'String': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'union.Broken': {}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 3}, 'path': [0, 'union.Broken'], 'reason': {'TypeUnexpected': {'actual': {'Object': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'union.Broken': [None]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 20}, 'path': [0, 'union.Broken', 0], 'reason': {'TypeUnexpected': {'actual': {'Null': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'union.Broken': [False]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 20}, 'path': [0, 'union.Broken', 0], 'reason': {'TypeUnexpected': {'actual': {'Boolean': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'union.Broken': [0]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 20}, 'path': [0, 'union.Broken', 0], 'reason': {'TypeUnexpected': {'actual': {'Number': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'union.Broken': ['']}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 20}, 'path': [0, 'union.Broken', 0], 'reason': {'TypeUnexpected': {'actual': {'String': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'union.Broken': [[]]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 20}, 'path': [0, 'union.Broken', 0], 'reason': {'TypeUnexpected': {'actual': {'Array': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'union.Broken': [{'Case': None}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 21}, 'path': [0, 'union.Broken', 0, 'Case'], 'reason': {'TypeUnexpected': {'actual': {'Null': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'union.Broken': [{'Case': False}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 21}, 'path': [0, 'union.Broken', 0, 'Case'], 'reason': {'TypeUnexpected': {'actual': {'Boolean': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'union.Broken': [{'Case': 0}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 21}, 'path': [0, 'union.Broken', 0, 'Case'], 'reason': {'TypeUnexpected': {'actual': {'Number': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'union.Broken': [{'Case': ''}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 21}, 'path': [0, 'union.Broken', 0, 'Case'], 'reason': {'TypeUnexpected': {'actual': {'String': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'union.Broken': [{'Case': []}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 21}, 'path': [0, 'union.Broken', 0, 'Case'], 'reason': {'TypeUnexpected': {'actual': {'Array': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'union.Broken': [{'Case!': {}}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 20}, 'path': [0, 'union.Broken', 0], 'reason': {'ObjectKeyRegexMatchCountUnexpected': {'actual': 0, 'expected': 1, 'regex': '^([A-Z][a-zA-Z0-9_]*)$', 'keys': ['Case!']}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'union.Broken': [{'case': {}}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 20}, 'path': [0, 'union.Broken', 0], 'reason': {'ObjectKeyRegexMatchCountUnexpected': {'actual': 0, 'expected': 1, 'regex': '^([A-Z][a-zA-Z0-9_]*)$', 'keys': ['case']}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'union.Broken': [{'Case': {'field': None}}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 30}, 'path': [0, 'union.Broken', 0, 'Case', 'field'], 'reason': {'TypeUnexpected': {'actual': {'Null': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'union.Broken': [{'Case': {'field': False}}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 30}, 'path': [0, 'union.Broken', 0, 'Case', 'field'], 'reason': {'TypeUnexpected': {'actual': {'Boolean': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'union.Broken': [{'Case': {'field': 0}}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 30}, 'path': [0, 'union.Broken', 0, 'Case', 'field'], 'reason': {'TypeUnexpected': {'actual': {'Number': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'union.Broken': [{'Case': {'field': ''}}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 30}, 'path': [0, 'union.Broken', 0, 'Case', 'field'], 'reason': {'TypeUnexpected': {'actual': {'String': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'union.Broken': [{'Case': {'field': {}}}]}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 30}, 'path': [0, 'union.Broken', 0, 'Case', 'field'], 'reason': {'TypeUnexpected': {'actual': {'Object': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'union.Broken': [{'Case': {'field': ['number']}}]}]}}}}], [{}, {'Ok_': {}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'union.Broken': []}]}}}}],[{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 3}, 'path': [0, 'union.Broken'], 'reason': {'EmptyArrayDisallowed': {}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'union.Broken': [{'Case': {}}], 'unknown': False},]}}}}],[{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 35}, 'path': [0, 'unknown'], 'reason': {'ObjectKeyDisallowed': {}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'headers.Example': {'field': None}, '->': {}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 23}, 'path': [0, 'headers.Example', 'field'], 'reason': {'TypeUnexpected': {'actual': {'Null': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'headers.Example': {'field': False}, '->': {}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 23}, 'path': [0, 'headers.Example', 'field'], 'reason': {'TypeUnexpected': {'actual': {'Boolean': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'headers.Example': {'field': 0}, '->': {}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 23}, 'path': [0, 'headers.Example', 'field'], 'reason': {'TypeUnexpected': {'actual': {'Number': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'headers.Example': {'field': ''}, '->': {}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 23}, 'path': [0, 'headers.Example', 'field'], 'reason': {'TypeUnexpected': {'actual': {'String': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'headers.Example': {'field': {}}, '->': {}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 23}, 'path': [0, 'headers.Example', 'field'], 'reason': {'TypeUnexpected': {'actual': {'Object': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'headers.Example': {}, '->': {'field': None}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 33}, 'path': [0, '->', 'field'], 'reason': {'TypeUnexpected': {'actual': {'Null': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'headers.Example': {}, '->': {'field': False}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 33}, 'path': [0, '->', 'field'], 'reason': {'TypeUnexpected': {'actual': {'Boolean': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'headers.Example': {}, '->': {'field': 0}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 33}, 'path': [0, '->', 'field'], 'reason': {'TypeUnexpected': {'actual': {'Number': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'headers.Example': {}, '->': {'field': ''}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 33}, 'path': [0, '->', 'field'], 'reason': {'TypeUnexpected': {'actual': {'String': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'headers.Example': {}, '->': {'field': {}}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 33}, 'path': [0, '->', 'field'], 'reason': {'TypeUnexpected': {'actual': {'Object': {}}, 'expected': {'Array': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'headers.Example': {}, '->': {'field': ['boolean']}}, {'headers.Example2': {}, '->': {'field': ['integer']}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 89}, 'path': [1, '->', 'field'], 'reason': {'PathCollision': {'document': 'auto_', 'location': {'row': 1, 'col': 33}, 'path': [0, '->', 'field']}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'headers.Example': {'field': ['boolean']}, '->': {}}, {'headers.Example2': {'field': ['integer']}, '->': {}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 79}, 'path': [1, 'headers.Example2', 'field'], 'reason': {'PathCollision': {'document': 'auto_', 'location': {'row': 1, 'col': 23}, 'path': [0, 'headers.Example', 'field']}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'headers.Example': {}, '->': {'field': ['boolean']}}], 'extend!': [{'headers.Example2': {}, '->': {'field': ['integer']}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'extend', 'location': {'row': 1, 'col': 34}, 'path': [0, '->', 'field'], 'reason': {'PathCollision': {'document': 'default', 'location': {'row': 1, 'col': 33}, 'path': [0, '->', 'field']}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'headers.Example': {'field': ['boolean']}, '->': {}}], 'extend!': [{'headers.Example2': {'field': ['integer']}, '->': {}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'extend', 'location': {'row': 1, 'col': 24}, 'path': [0, 'headers.Example2', 'field'], 'reason': {'PathCollision': {'document': 'default', 'location': {'row': 1, 'col': 23}, 'path': [0, 'headers.Example', 'field']}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'headers.Example': {}, '->': {'field': ['boolean']}}, {'headers.Example2': {'field': ['integer']}, '->': {}}]}}}}], [{}, {'Ok_': {}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [None]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 2}, 'path': [0], 'reason': {'TypeUnexpected': {'actual': {'Null': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [False]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 2}, 'path': [0], 'reason': {'TypeUnexpected': {'actual': {'Boolean': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [0]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 2}, 'path': [0], 'reason': {'TypeUnexpected': {'actual': {'Number': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': ['']}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 2}, 'path': [0], 'reason': {'TypeUnexpected': {'actual': {'String': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [[]]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'auto_', 'location': {'row': 1, 'col': 2}, 'path': [0], 'reason': {'TypeUnexpected': {'actual': {'Array': {}}, 'expected': {'Object': {}}}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'PseudoJson': {'schema': [{'info.Example': {}}], 'extend!': [{'info.Example2': {}}]}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'extend', 'location': {'row': 1, 'col': 3}, 'path': [0, 'info.Example2'], 'reason': {'PathCollision': {'document': 'default', 'location': {'row': 1, 'col': 3}, 'path': [0, 'info.Example']}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'Directory': {'schemaDirectory': '../../runner/schema/parse2'}}}}], [{}, {'ErrorValidationFailure': {'cases': [{'document': 'schema.telepact.json', 'location': {'row': 1, 'col': 1}, 'path': [], 'reason': {'JsonInvalid': {}}}]}}]],
        [[{}, {'fn.validateSchema': {'input': {'Directory': {'schemaDirectory': '../../runner/schema/parse3'}}}}], [{}, {'Ok_': {}}]],
        [[{}, {'fn.validateSchema': {'input': {'Directory': {'schemaDirectory': '../../runner/schema/parse4'}}}}], [{'@assert_': {'setCompare': True}}, {'ErrorValidationFailure': {'cases': [{'document': 'schema1.telepact.json', 'location': {'row': 4, 'col': 24}, 'path': [0, 'struct.Example', 'field1', 0], 'reason': {'StringRegexMatchFailed': {'regex': '^(boolean|integer|number|string|any|array|object)|((fn|(union|struct|_ext))\\.([a-zA-Z_]\\w*))$'}}},{'document': 'schema2.telepact.json', 'location': {'row': 7, 'col': 17}, 'path': [0, '->', 0, 'Ok_', 'extra'], 'reason': {'TypeUnexpected': {'actual': {'String': {}}, 'expected': {'Array': {}}}}}]}}]],
    ]
}