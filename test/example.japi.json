[
  {
    "///": [
      " This is the example schema. It is focussed on outlining type edge cases for use in tests. ",
      "                                                                                           ",
      " As a reminder:                                                                            ",
      " - ! means optional field                                                                  ",
      " - ? means nullable type                                                                   "
    ],
    "info.Example": {}
  },

  {
    "///": " A struct value demonstrating all common type permutations. ",
    "struct.Value": {
      "bool!": ["boolean"],
      "nullBool!": ["boolean?"],
      "arrBool!": ["array", ["boolean"]],
      "arrNullBool!": ["array", ["boolean?"]],
      "objBool!": ["object", ["boolean"]],
      "objNullBool!": ["object", ["boolean?"]],
      "pStrBool!": ["struct<1>.PStr", ["boolean"]],
      "pStrNullBool!": ["struct<1>.PStr", ["boolean?"]],
      "pEnumBool!": ["enum<1>.PEnum", ["boolean"]],
      "pEnumNullBool!": ["enum<1>.PEnum", ["boolean?"]],

      "int!": ["integer"],
      "nullInt!": ["integer?"],
      "arrInt!": ["array", ["integer"]],
      "arrNullInt!": ["array", ["integer?"]],
      "objInt!": ["object", ["integer"]],
      "objNullInt!": ["object", ["integer?"]],
      "pStrInt!": ["struct<1>.PStr", ["integer"]],
      "pStrNullInt!": ["struct<1>.PStr", ["integer?"]],
      "pEnumInt!": ["enum<1>.PEnum", ["integer"]],
      "pEnumNullInt!": ["enum<1>.PEnum", ["integer?"]],

      "num!": ["number"],
      "nullNum!": ["number?"],
      "arrNum!": ["array", ["number"]],
      "arrNullNum!": ["array", ["number?"]],
      "objNum!": ["object", ["number"]],
      "objNullNum!": ["object", ["number?"]],
      "pStrNum!": ["struct<1>.PStr", ["number"]],
      "pStrNullNum!": ["struct<1>.PStr", ["number?"]],
      "pEnumNum!": ["enum<1>.PEnum", ["number"]],
      "pEnumNullNum!": ["enum<1>.PEnum", ["number?"]],

      "str!": ["string"],
      "nullStr!": ["string?"],
      "arrStr!": ["array", ["string"]],
      "arrNullStr!": ["array", ["string?"]],
      "objStr!": ["object", ["string"]],
      "objNullStr!": ["object", ["string?"]],
      "pStrStr!": ["struct<1>.PStr", ["string"]],
      "pStrNullStr!": ["struct<1>.PStr", ["string?"]],
      "pEnumStr!": ["enum<1>.PEnum", ["string"]],
      "pEnumNullStr!": ["enum<1>.PEnum", ["string?"]],

      "arr!": ["array", ["any"]],
      "nullArr!": ["array?", ["any"]],
      "arrArr!": ["array", ["array", ["any"]]],
      "arrNullArr!": ["array", ["array?", ["any"]]],
      "objArr!": ["object", ["array", ["any"]]],
      "objNullArr!": ["object", ["array?", ["any"]]],
      "pStrArr!": ["struct<1>.PStr", ["array", ["any"]]],
      "pStrNullArr!": ["struct<1>.PStr", ["array?", ["any"]]],
      "pEnumArr!": ["enum<1>.PEnum", ["array", ["any"]]],
      "pEnumNullArr!": ["enum<1>.PEnum", ["array?", ["any"]]],

      "obj!": ["object", ["any"]],
      "nullObj!": ["object?", ["any"]],
      "arrObj!": ["array", ["object", ["any"]]],
      "arrNullObj!": ["array", ["object?", ["any"]]],
      "objObj!": ["object", ["object", ["any"]]],
      "objNullObj!": ["object", ["object?", ["any"]]],
      "pStrObj!": ["struct<1>.PStr", ["object", ["any"]]],
      "pStrNullObj!": ["struct<1>.PStr", ["object?", ["any"]]],
      "pEnumObj!": ["enum<1>.PEnum", ["object", ["any"]]],
      "pEnumNullObj!": ["enum<1>.PEnum", ["object?", ["any"]]],

      "any!": ["any"],
      "nullAny!": ["any?"],
      "arrAny!": ["array", ["any"]],
      "arrNullAny!": ["array", ["any?"]],
      "objAny!": ["object", ["any"]],
      "objNullAny!": ["object", ["any?"]],
      "pStrAny!": ["struct<1>.PStr", ["any"]],
      "pStrNullAny!": ["struct<1>.PStr", ["any?"]],
      "pEnumAny!": ["enum<1>.PEnum", ["any"]],
      "pEnumNullAny!": ["enum<1>.PEnum", ["any?"]],

      "struct!": ["struct.ExStruct"],
      "nullStruct!": ["struct.ExStruct?"],
      "arrStruct!": ["array", ["struct.ExStruct"]],
      "arrNullStruct!": ["array", ["struct.ExStruct?"]],
      "objStruct!": ["object", ["struct.ExStruct"]],
      "objNullStruct!": ["object", ["struct.ExStruct?"]],
      "pStrStruct!": ["struct<1>.PStr", ["struct.ExStruct"]],
      "pStrNullStruct!": ["struct<1>.PStr", ["struct.ExStruct?"]],
      "pEnumStruct!": ["enum<1>.PEnum", ["struct.ExStruct"]],
      "pEnumNullStruct!": ["enum<1>.PEnum", ["struct.ExStruct?"]],

      "enum!": ["enum.ExEnum"],
      "nullEnum!": ["enum.ExEnum?"],
      "arrEnum!": ["array", ["enum.ExEnum"]],
      "arrNullEnum!": ["array", ["enum.ExEnum?"]],
      "objEnum!": ["object", ["enum.ExEnum"]],
      "objNullEnum!": ["object", ["enum.ExEnum?"]],
      "pStrEnum!": ["struct<1>.PStr", ["enum.ExEnum"]],
      "pStrNullEnum!": ["struct<1>.PStr", ["enum.ExEnum?"]],
      "pEnumEnum!": ["enum<1>.PEnum", ["enum.ExEnum"]],
      "pEnumNullEnum!": ["enum<1>.PEnum", ["enum.ExEnum?"]],

      "fn!": ["fn.example"],
      "nullFn!": ["fn.example?"],
      "arrFn!": ["array", ["fn.example"]],
      "arrNullFn!": ["array", ["fn.example?"]],
      "objFn!": ["object", ["fn.example"]],
      "objNullFn!": ["object", ["fn.example?"]],
      "pStrFn!": ["struct<1>.PStr", ["fn.example"]],
      "pStrNullFn!": ["struct<1>.PStr", ["fn.example?"]],
      "pEnumFn!": ["enum<1>.PEnum", ["fn.example"]],
      "pEnumNullFn!": ["enum<1>.PEnum", ["fn.example?"]],

      "p2Str!": ["struct<2>.PStruct", ["boolean"], ["integer"]],
      "nullP2Str!": ["struct<2>.PStruct?", ["boolean"], ["integer"]],
      "arrP2Str!": ["array", ["struct<2>.PStruct", ["boolean"], ["integer"]]],
      "arrNullP2Str!": [
        "array",
        ["struct<2>.PStruct?", ["boolean"], ["integer"]]
      ],
      "objP2Str!": ["object", ["struct<2>.PStruct", ["boolean"], ["integer"]]],
      "objNullP2Str!": [
        "object",
        ["struct<2>.PStruct?", ["boolean"], ["integer"]]
      ],
      "pStrP2Str!": [
        "struct<1>.PStr",
        ["struct<2>.PStruct", ["boolean"], ["integer"]]
      ],
      "pStrNullP2Str!": [
        "struct<1>.PStr",
        ["struct<2>.PStruct?", ["boolean"], ["integer"]]
      ],
      "pEnumP2Str!": [
        "enum<1>.PEnum",
        ["struct<2>.PStruct?", ["boolean"], ["integer"]]
      ],
      "pEnumNullP2Str!": [
        "enum<1>.PEnum",
        ["struct<2>.PStruct?", ["boolean"], ["integer"]]
      ],

      "p2Enum!": ["enum<2>.P2Enum", ["boolean"], ["integer"]],
      "nullP2Enum!": ["enum<2>.P2Enum?", ["boolean"], ["integer"]],
      "arrP2Enum!": ["array", ["enum<2>.P2Enum", ["boolean"], ["integer"]]],
      "arrNullP2Enum!": [
        "array",
        ["enum<2>.P2Enum?", ["boolean"], ["integer"]]
      ],
      "objP2Enum!": ["object", ["enum<2>.P2Enum", ["boolean"], ["integer"]]],
      "objNullP2Enum!": [
        "object",
        ["enum<2>.P2Enum?", ["boolean"], ["integer"]]
      ],
      "pStrP2Enum!": [
        "struct<1>.PStr",
        ["enum<2>.P2Enum", ["boolean"], ["integer"]]
      ],
      "pStrNullP2Enum!": [
        "struct<1>.PStr",
        ["enum<2>.P2Enum?", ["boolean"], ["integer"]]
      ],
      "pEnumP2Enum!": [
        "enum<1>.PEnum",
        ["enum<2>.P2Enum", ["boolean"], ["integer"]]
      ],
      "pEnumNullP2Enum!": [
        "enum<1>.PEnum",
        ["enum<2>.P2Enum?", ["boolean"], ["integer"]]
      ]
    }
  },

  {
    "///": [
      " The main struct example.                                                                ",
      "                                                                                         ",
      " The [required] field must be supplied. The optional field does not need to be supplied. "
    ],
    "struct.ExStruct": {
      "required": ["boolean"],
      "optional!": ["boolean"]
    }
  },

  {
    "enum.ExEnum": {
      "one": {},
      "two": {
        "required": ["boolean"],
        "optional!": ["boolean"]
      }
    }
  },

  {
    "struct<1>.PStr": {
      "wrap": ["T.0"]
    }
  },

  {
    "struct<2>.P2Str": {
      "wrap": ["T.0"],
      "nest": ["array", ["T.1"]]
    }
  },

  {
    "enum<1>.PEnum": {
      "one": {},
      "two": {
        "wrap": ["T.0"]
      }
    }
  },

  {
    "enum<2>.P2Enum": {
      "one": {},
      "two": {
        "wrap": ["T.0"],
        "nest": ["array", ["T.1"]]
      }
    }
  },

  {
    "///": "An example function.",
    "fn.example": {
      "required": ["boolean"],
      "optional!": ["boolean"]
    },
    "->": {
      "ok": {}
    }
  },

  {
    "fn.test": {
      "value!": ["struct.Value"]
    },
    "->": {
      "ok": {
        "value!": ["struct.Value"]
      },
      "errorExample": {
        "property": ["string"]
      }
    }
  }
]
