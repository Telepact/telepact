[
  {
    "info.SchemaExample": {}
  },
  {
    "union.ValidationFailureReason": {
      "TypeUnexpected": {
        "expected": ["union._Type"],
        "actual": ["union._Type"]
      },
      "InvalidTrait": {},
      "TraitDefinitionCannotTargetInternalFunctions": {},
      "EmptyArrayDisallowed": {},
      "StringRegexMatchFailed": {
        "regex": ["string"]
      },
      "KeyRegexMatchFailed": {
        "regex": ["string"]
      },
      "ObjectKeyRegexMatchCountUnexpected": {
        "regex": ["string"],
        "expected": ["integer"],
        "actual": ["integer"]
      },
      "ArrayLengthUnexpected": {
        "actual": ["integer"],
        "expected": ["integer"]
      },
      "TypeUnknown": {
        "name": ["string"]
      },
      "TypeExtensionImplementationMissing": {
        "name": ["string"]
      },
      "RequiredObjectKeyMissing": {},
      "JsonInvalid": {},
      "PathCollision": {
        "other": ["array", ["any"]]
      },
      "ObjectKeyDisallowed": {}
    }
  },
  {
    "struct.ValidationFailure": {
      "path": ["array", ["any"]],
      "reason": ["union.ValidationFailureReason"]
    }
  },
  {
    "fn.validateSchema": {
      "schema": ["any?"]
    },
    "->": {
      "Ok": {},
      "ErrorValidationFailure": {
        "cases": ["array", ["struct.ValidationFailure"]]
      }
    }
  }
]
