[
  {
    "info.SchemaExample": {}
  },
  {
    "union.ValidationFailureReason": {
      "TypeUnexpected": {
        "expected": ["union._Type"],
        "actual": ["union._Type"]
      },
      "DuplicateSchemaKey": {
        "schemaKey": ["string"]
      },
      "DefinitionMustBeObjectType": {},
      "UndefinedTypeExtension": {
        "name": ["string"]
      },
      "DefinitionMustHaveOneKeyMatchingRegex": {
        "regex": ["string"]
      },
      "TraitArgumentFieldAlreadyInUseByFunction": {
        "fn": ["string"]
      },
      "TraitResultValueAlreadyInUseByFunction": {
        "fn": ["string"]
      },
      "ObjectTypeRequired": {},
      "InvalidTrait": {},
      "TraitDefinitionCannotTargetInternalFunctions": {},
      "ArrayMustNotBeEmpty": {},
      "StringRegexMatchFailed": {
        "regex": ["string"]
      },
      "NullableGenericDisallowed": {},
      "ArrayLengthUnexpected": {
        "actual": ["integer"],
        "expected": ["integer"]
      },
      "TypeUnknown": {
        "name": ["string"]
      },
      "TypeExtensionImplementationMissing": {
        "name": ["string"]
      },
      "RequiredObjectKeyMissing": {},
      "JsonInvalid": {}
    }
  },
  {
    "struct.ValidationFailure": {
      "path": ["array", ["any"]],
      "reason": ["union.ValidationFailureReason"]
    }
  },
  {
    "fn.validateSchema": {
      "schema": ["any?"]
    },
    "->": {
      "Ok": {},
      "ErrorValidationFailure": {
        "cases": ["array", ["struct.ValidationFailure"]]
      }
    }
  }
]
