#|
#|  Copyright The Telepact Authors
#|
#|  Licensed under the Apache License, Version 2.0 (the "License");
#|  you may not use this file except in compliance with the License.
#|  You may obtain a copy of the License at
#|
#|  https://www.apache.org/licenses/LICENSE-2.0
#|
#|  Unless required by applicable law or agreed to in writing, software
#|  distributed under the License is distributed on an "AS IS" BASIS,
#|  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#|  See the License for the specific language governing permissions and
#|  limitations under the License.
#|

name: Release

on:
  push:
    branches:
      - main  

jobs:

  check-version-change:
    name: Check version change
    runs-on: ubuntu-latest
    outputs:
      version-changed: ${{ steps.check-file.outputs.version_changed }}
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Determine if VERSION.txt was modified in the latest commit
        id: check-file
        run: |
          git --no-pager show
          git show --name-only --pretty="" HEAD | grep -q "VERSION.txt"
          if [ $? -eq 0 ]; then
            echo "VERSION.txt was changed in the last commit."
            echo "version_changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "VERSION.txt was NOT changed in the last commit. Subsequent jobs will be skipped."
            echo "version_changed=false" >> "$GITHUB_OUTPUT"
          fi

  build-release:
    name: Build release
    needs: [check-version-change]
    if: needs.check-version-change.outputs.version-changed == 'true'
    uses: ./.github/workflows/build.yml
    secrets:
      MVN_GPG_PRIVATE_KEY: ${{ secrets.MVN_GPG_PRIVATE_KEY }}
      MVN_GPG_PASSPHRASE: ${{ secrets.MVN_GPG_PASSPHRASE }}
    
  create-release:
    name: Create release
    runs-on: ubuntu-latest
    needs: [build-release]
    timeout-minutes: 2
    steps:
      - name: Generate GitHub App token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.TELEPACT_BOT_APP_ID }}
          private-key: ${{ secrets.TELEPACT_BOT_PRIVATE_KEY }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          token: ${{ steps.generate-token.outputs.token }}

      - name: Download ts artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-ts-tgz
          path: lib/ts/dist-tgz

      - name: Download java artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-java
          path: lib/java/target

      - name: Download py artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-py
          path: lib/py/dist

      - name: Download dart artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-dart
          path: bind/dart/dist

      - name: Download cli artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-cli
          path: sdk/cli/dist

      - name: Download prettier artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-prettier-tgz
          path: sdk/prettier/dist-tgz

      - name: Download console artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-console
          path: sdk/console/dist

      - name: Install Project CLI
        run: make install-project-cli

      - name: Cut release
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: telepact-project release
