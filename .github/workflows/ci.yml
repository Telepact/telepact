#|
#|  Copyright The Telepact Authors
#|
#|  Licensed under the Apache License, Version 2.0 (the "License");
#|  you may not use this file except in compliance with the License.
#|  You may obtain a copy of the License at
#|
#|  https://www.apache.org/licenses/LICENSE-2.0
#|
#|  Unless required by applicable law or agreed to in writing, software
#|  distributed under the License is distributed on an "AS IS" BASIS,
#|  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#|  See the License for the specific language governing permissions and
#|  limitations under the License.
#|

name: CI

on:
  workflow_dispatch:
  pull_request:
    types:
      - synchronize
    branches:
      - main

jobs:
  build-ts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "16"

      - name: Build ts
        run: make ts

      - name: Upload ts build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-ts
          path: lib/ts/dist
          retention-days: 1

  build-java:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "corretto"

      - name: Build java
        run: make java

      - name: Upload java build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-java
          path: lib/java/target
          retention-days: 1

  build-py:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: pipx install poetry

      - name: Install dependencies
        run: make py

      - name: Upload py build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-py
          path: lib/py/dist
          retention-days: 1

  build-cli:
    runs-on: ubuntu-latest
    needs: [build-py]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: pipx install poetry

      - name: Download py build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-py
          path: lib/py/dist

      - name: Build cli
        run: make cli

      - name: Upload cli build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-cli
          path: sdk/cli/dist
          retention-days: 1

  build-project-cli:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: pipx install poetry

      - name: Build project-cli
        run: make project-cli

      - name: Upload project-cli build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-project-cli
          path: tool/telepact_project_cli/dist
          retention-days: 1

  build-dart:
    runs-on: ubuntu-latest
    needs: [build-ts]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: 3.6

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Download ts build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-ts
          path: lib/ts/dist

      - name: Build dart
        run: make dart

      - name: Run tests
        run: make test-dart

  build-prettier:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: make prettier

      - name: Upload prettier build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-prettier
          path: sdk/prettier-plugin-telepact/dist
          retention-days: 1

  build-console:
    runs-on: ubuntu-latest
    needs: [build-ts, build-cli, build-prettier]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download ts build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-ts
          path: lib/ts/dist

      - name: Download cli build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-cli
          path: sdk/cli/dist

      - name: Download prettier build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-prettier
          path: sdk/prettier-plugin-telepact/dist
      
      - name: Install CLI
        run: make install-cli

      - name: Build console
        run: make console
      
      - name: Install Playwright Browsers
        run: npx playwright install --force
      
      - name: Run tests
        run: DEBUG=pw:api make test-console

  build-docker:
    runs-on: ubuntu-latest
    needs: [build-cli]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download cli build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-cli
          path: sdk/cli/dist

      - name: Build Docker image
        run: make docker

      - name: Test Docker image
        run: make test-docker

  check-license-header:
    runs-on: ubuntu-latest
    needs: [build-project-cli]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download project-cli build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-project-cli
          path: tool/telepact_project_cli/dist

      - name: Install Project CLI
        run: make install-project-cli

      - name: Run license check
        run: make license-header

      - name: Check for changes
        run: |
          if git status --porcelain | grep .; then
            echo "ERROR: License headers missing or obsolete.\nTo fix, run 'make license-header' and git commit the changes."
            false
          else
            echo "License headers up-to-date."
          fi

  check-version:
    runs-on: ubuntu-latest
    needs: [build-project-cli]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download project-cli build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-project-cli
          path: tool/telepact_project_cli/dist

      - name: Install Project CLI
        run: make install-project-cli

      - name: Run version check
        run: make version

      - name: Check for changes
        run: |
          if git status --porcelain | grep .; then
            echo "ERROR: Misaligned versions.\nTo fix, run 'make version' and git commit the changes."
            false
          else
            echo "Versions up-to-date."
          fi

  run-tests:
    runs-on: ubuntu-latest
    needs: [build-ts, build-java, build-py, build-cli]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: pipx install poetry

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "corretto"

      - name: Install nats-server
        run: |
          sudo apt-get update
          sudo apt-get install -y nats-server

      - name: Download ts build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-ts
          path: lib/ts/dist

      - name: Download java build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-java
          path: lib/java/target

      - name: Download py build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-py
          path: lib/py/dist

      - name: Download cli build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-cli
          path: sdk/cli/dist

      - name: Install CLI
        run: make install-cli

      - name: Run tests
        run: |
          make test
