[
    {
        "///": [
            " hello world         ",
            "                     ",
            " This is the result. "
        ],
        "struct.Example1": {
            "field1": "integer",
            "int": "boolean?",
            "long!": "string",
            "field4": "any",
            "field5": "union.Un1",
            "field6": "fn.test",
            "build": ["integer"],
            "build2": {"string": "integer"},
            "field7!": "union.Un1?",
            "field8!": "struct.Example4",
            "field9": ["struct.Example5"]
        }
    },
    {
        "struct.Example2": {
            "field1": "boolean",
            "field2": ["string"]
        }
    },
    {
        "struct.Example3": {
            "field1": "boolean",
            "field2": [["string"]]
        }
    },
    {
        "struct.Example4": {
            "field1": "boolean",
            "field2": {"string": "boolean"}
        }
    },
    {
        "struct.Example5": {
            "field1": "boolean",
            "field2": {"string": {"string": "boolean"}}
        }
    },
    {
        "struct.Example6": {
            "field1": "boolean",
            "field2": "struct.Example1",
            "field3": "struct.Example1?"
        }
    },
    {
        "///": [
            " A union             ",
            "                     ",
            " This is the result. "
        ],
        "union.Un1": [{
            "///": [
                " First union entry   ",
                "                     ",
                " This is first.      "
            ],
            "First": {
                "field1": "integer", 
                "field2": "boolean"
            }
        }, {
            "///": [
                " Second union entry  ",
                "                     ",
                " This is second.     "
            ],
            "Second": {
                "field1": "string", 
                "field2": "boolean"
            }
        }]
    },      
    {
        "///": [
            " A function         ",
            "                     ",
            " This is the result. "
        ],
        "fn.test": {
            "field1": "integer",
            "field2": "boolean"
        },
        "->": [{
            "Ok_": {
                "field1": "integer",
                "field2": "boolean"
            }
        }, {
            "Err": {
                "error": "string"
            }
        }]
    },
    {
        "fn.another": {},
        "->": [
            {
                "Ok_": {
                    "field1": "integer"
                }
            }
        ]
    } 
]